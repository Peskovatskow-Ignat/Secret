import socket
from concurrent.futures import ThreadPoolExecutor
from database_select import entrance, log_in
from time import sleep

client_sockets = set()
list_users = set()
# –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
hostname = socket.gethostname()
local_ip = socket.gethostbyname(hostname)
print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}")

# –°–æ–∑–¥–∞–µ–º —Å–æ–∫–µ—Ç
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind(("127.0.0.1", 55500))
sock.listen(10)


# def rul(conn):
#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
#     rules = ("-" * 80 + "\n" +
#              "1 - –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç" + "\n" +
#              "2 - –ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" + "\n" +
#              "... –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–æ–ª—è–º–∏" + "\n" +
#              "-" * 80)
#     conn.send(rules.encode())


def rec(cs, address):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    while True:
        try:
            sleep(0.1)
            message = cs.recv(1024).decode()
            sleep(0.1)
            if message == "–ü–æ–∫–∏–¥–∞–µ—Ç —á–∞—Çüëã":
                list_users.remove(address)
                client_sockets.remove(cs)
                cs.close()
        except Exception as error:
            print(error)
            # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —É–¥–∞–ª—è–µ–º —Å–æ–∫–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞
            client_sockets.remove(cs)
            list_users.remove(address)
            cs.close()
        else:
            user_string = " ".join(list_users)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º, –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            for i in client_sockets:
                i.send(bytes(f"{user_string};{address}: {message}".encode()))


def con(conn, address):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º
    while True:
        register = conn.recv(1024).decode()
        if register == "1":
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç, –ø–æ–ª—É—á–∞–µ–º –æ—Ç –Ω–µ–≥–æ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
            login = conn.recv(1024).decode()
            password = conn.recv(1024).decode()
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é entrance –∏–∑ –º–æ–¥—É–ª—è database_select –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if name := entrance(login, password):
                # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                response = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è"
                conn.send(response.encode())
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∫–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
                user_name = name
                list_users.add(user_name)
                client_sockets.add(conn)
                break
            else:
                # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                conn.send("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å".encode())

        if register == "2":
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –ø–æ–ª—É—á–∞–µ–º –æ—Ç –Ω–µ–≥–æ –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å –∏ –∏–º—è
            login = conn.recv(1024).decode()
            password = conn.recv(1024).decode()
            name = conn.recv(1024).decode()
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é log_in –∏–∑ –º–æ–¥—É–ª—è database_select –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            if name := log_in(login, password, name):
                # –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                response = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è"
                conn.send(response.encode())
                print(response)
            else:
                response = "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–Ω—è—Ç–æ"
                conn.send(response.encode())
    rec(conn, user_name)


print("Server start")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
def accept_client(server_sock):
    with ThreadPoolExecutor(max_workers=10) as executor:
        while True:
            client_conn, client_address = server_sock.accept()
            print(f"Connected from {client_address}")
            executor.submit(con, client_conn, client_address)


# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
while True:
    accept_client(sock)
